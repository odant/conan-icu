diff --git a/src/source/samples/uresb/Makefile b/src/source/samples/uresb/Makefile
index c05110b..ead2484 100644
--- a/src/source/samples/uresb/Makefile
+++ b/src/source/samples/uresb/Makefile
@@ -59,6 +59,8 @@ distclean clean:
 ## Special for a special codepage
 sr.res : sr.txt
 	@echo "generating $@"
+	cat $?
+	$(GENRB) $(GENRBOPT) -e $?
 	$(GENRB) $(GENRBOPT) -e cp1251 $?
 
 # Can change this to LINK.c if it is a C only program
diff --git a/src/source/test/cintltst/creststn.c b/src/source/test/cintltst/creststn.c
index a19723b..39a7f21 100644
--- a/src/source/test/cintltst/creststn.c
+++ b/src/source/test/cintltst/creststn.c
@@ -937,21 +937,51 @@ static void TestBinaryCollationData(){
     log_verbose("Testing binary collation data resource......\n");
 
     testdatapath=loadTestData(&status);
+    printf("ODADebug: testdatapath = %s\n", testdatapath);
     if(U_FAILURE(status))
     {
         log_data_err("Could not load testdata.dat %s \n",myErrorName(status));
         return;
     }
 
+    if (status == U_USING_FALLBACK_WARNING) {
+        printf("ODADebug: status = %s\n", "U_USING_FALLBACK_WARNING");
+    }
+    if (status == U_USING_DEFAULT_WARNING) {
+        printf("ODADebug: status = %s\n", "U_USING_DEFAULT_WARNING");
+    }
+
 
     teRes=ures_open(testdatapath, locale, &status);
     if(U_FAILURE(status)){
         log_err("ERROR: Failed to get resource for \"te\" with %s", myErrorName(status));
         return;
     }
+
+    const UResType teResType = ures_getType(teRes);
+    switch (teResType) {
+        case URES_NONE: printf("ODADebug: teResType = %s\n", "URES_NONE"); break;
+        case URES_STRING: printf("ODADebug: teResType = %s\n", "URES_STRING"); break;
+        case URES_BINARY: printf("ODADebug: teResType = %s\n", "URES_BINARY"); break;
+        case URES_TABLE: printf("ODADebug: teResType = %s\n", "URES_TABLE"); break;
+        case URES_ALIAS: printf("ODADebug: teResType = %s\n", "URES_ALIAS"); break;
+        case URES_INT: printf("ODADebug: teResType = %s\n", "URES_INT"); break;
+        case URES_ARRAY: printf("ODADebug: teResType = %s\n", "URES_ARRAY"); break;
+        case URES_INT_VECTOR: printf("ODADebug: teResType = %s\n", "URES_INT_VECTOR"); break;
+        default: printf("ODADebug: teResType = %s\n", "Unkhow");
+    }
+    const int32_t teResSize = ures_getSize(teRes);
+    printf("ODADebug: teResSize = %d\n", teResSize);
+
     status=U_ZERO_ERROR;
     coll = ures_getByKey(teRes, "collations", coll, &status);
+    if(U_FAILURE(status)){
+        log_err("ODADebug: ERROR: ures_getByKey(teRes, \"collations\", coll, &status) with %s\n", myErrorName(status));
+    }
     coll = ures_getByKey(coll, "standard", coll, &status);
+    if(U_FAILURE(status)){
+        log_err("ODADebug: ERROR: ures_getByKey(coll, \"standard\", coll, &status) with %s\n", myErrorName(status));
+    }
     if(U_SUCCESS(status)){
         CONFIRM_ErrorCode(status, U_ZERO_ERROR);
         CONFIRM_INT_EQ(ures_getType(coll), URES_TABLE);
@@ -974,6 +1004,7 @@ static void TestBinaryCollationData(){
         log_err("ERROR: ures_getByKey(locale(te), collations) failed\n");
         return;
     }
+    printf("ODADebug: locale = %s\n", locale);
     ures_close(binColl);
     ures_close(coll);
     ures_close(teRes);
